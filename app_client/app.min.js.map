{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","designCtrl","$scope","Fabric","FabricConstants","Keypress","vm","this","shapeType","drawingMode","isDown","startPosition","fabric","init","console","log","JSONExportProperties","textDefaults","shapeDefaults","setCanvasSize","selection","draw","x","e","offsetX","y","offsetY","shape","Rect","left","top","width","height","stroke","strokeWidth","fill","Ellipse","originX","originY","rx","ry","Triangle","points","starPolygonPoints","Polygon","strokeLineJoin","centeredScaling","addShape","drawShape","deltaX","deltaY","keepSquare","setWidth","setHeight","setCoords","Math","abs","set","getCenterPoint","radius","get","length","boundingBox","getBoundingBox","renderAll","addDrawing","getHeight","rotate","setActiveObject","$inject","homeCtrl","profileCtrl","meanData","user","designs","getProfile","success","data","getDesigns","error","loginCtrl","credentials","email","password","onSubmit","login","err","then","registerCtrl","name","register","$http","$window","saveToken","token","localStorage","getToken","logout","removeItem","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","service","headers","Authorization","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n    angular.module('app', ['ngRoute','common.fabric','common.fabric.utilities','common.fabric.constants']);\r\n    \r\n    function config($routeProvider, $locationProvider) {\r\n        $routeProvider\r\n            .when('/', {\r\n                  templateUrl: 'home/home.view.html',\r\n                  controller: 'homeCtrl',\r\n                  controllerAs: 'vm'\r\n                  \r\n            })\r\n            .when('/register', {\r\n                templateUrl: '/auth/register/register.view.html',\r\n                controller: 'registerCtrl',\r\n                controllerAs: 'vm'\r\n            })\r\n            .when('/login', {\r\n                templateUrl: '/auth/login/login.view.html',\r\n                controller:'loginCtrl',\r\n                controllerAs: 'vm'\r\n            })\r\n            .when('/profile', {\r\n                templateUrl: '/profile/profile.view.html',\r\n                controller:'profileCtrl',\r\n                controllerAs: 'vm'\r\n            })\r\n            .when('/design', {\r\n                templateUrl: '/design/design.view.html',\r\n                controller:'designCtrl',\r\n                controllerAs:'vm'\r\n            \r\n            })\r\n            .otherwise({redirectTo: '/'});\r\n        $locationProvider.html5Mode(true);\r\n    }\r\n    \r\n    function run($rootScope, $location, authentication) {\r\n        $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n            if( $location.path() === '/profile' && !authentication.isLoggedIn()) {\r\n                $location.path('/');\r\n            }\r\n        });\r\n    }\r\n    angular\r\n        .module('app')\r\n        .config(['$routeProvider', '$locationProvider', config])\r\n        .run(['$rootScope', '$location', 'authentication', run]);\r\n})();\n(function() {\r\n    angular\r\n        .module('app')\r\n        .controller('designCtrl', designCtrl); \r\n    \r\n    designCtrl.$inject = ['$location','$scope', 'Fabric', 'FabricConstants', 'Keypress'];\r\n    \r\n    function designCtrl($location, $scope, Fabric, FabricConstants, Keypress) {\r\n        var vm = this;\r\n        vm.shapeType = 'rect';\r\n        vm.drawingMode = true;\r\n        vm.isDown = false;\r\n        vm.startPosition = {};\r\n        $scope.fabric = {};\r\n        $scope.FabricConstants = FabricConstants;\r\n        \r\n        vm.init = function() {\r\n            console.log('initializing fabric');\r\n            $scope.fabric = new Fabric({\r\n                JSONExportProperties: FabricConstants.JSONExportProperties,\r\n                textDefaults: FabricConstants.textDefaults,\r\n                shapeDefaults: FabricConstants.shapeDefaults\r\n//                json: $scope.main.selectedPage.json\r\n            });\r\n            $scope.fabric.setCanvasSize(800,800);\r\n            $scope.fabric.selection = false;\r\n        };\r\n        vm.draw = function(event) {\r\n            console.log('in draw');\r\n            if(!vm.drawingMode) return;\r\n            vm.isDown = true;\r\n            vm.startPosition.x = event.e.offsetX - 5;\r\n            vm.startPosition.y = event.e.offsetY - 5;\r\n            vm.shape;\r\n            console.log(vm.shapeType);\r\n            switch(vm.shapeType) {\r\n                case 'rect':\r\n                    vm.shape = new fabric.Rect({\r\n                        left: $scope.startPosition.x,\r\n                        top: $scope.startPosition.y,\r\n                        width:0,\r\n                        height:0,\r\n                        stroke:'black',\r\n                        strokeWidth:1,\r\n                        fill:'transparent'\r\n                    });\r\n                    break;\r\n                case 'ellipse':\r\n                    vm.shape = new fabric.Ellipse({\r\n                        left: $scope.startPosition.x,\r\n                        top: $scope.startPosition.y,\r\n                        originX: 'left',\r\n                        originY: 'top',\r\n                        rx: 0,\r\n                        ry: 0,\r\n                        fill: 'transparent',\r\n                        stroke: 'black',\r\n                        strokeWidth: 1\r\n                    });\r\n                    break;\r\n                case 'triangle':\r\n                    vm.shape = new fabric.Triangle({\r\n                        left: $scope.startPosition.x,\r\n                        top: $scope.startPosition.y,\r\n                        width:0,\r\n                        height:0,\r\n                        fill: 'transparent',\r\n                        stroke: 'black',\r\n                        strokeWidth: 1,\r\n                    });\r\n                    break;\r\n                case 'polygon':\r\n                    var points = starPolygonPoints(5, 0, 0);\r\n                    shape = new fabric.Polygon(points, {\r\n                        stroke: 'black',\r\n                        left: startPosition.x - 10,\r\n                        top: startPosition.y - 10,\r\n                        originX: 'left',\r\n                        originY: 'top',\r\n                        fill: 'transparent',\r\n                        strokeWidth: 1,\r\n                        strokeLineJoin: 'bevil',\r\n                        centeredScaling: true\r\n                    }, true);\r\n            }\r\n            $scope.fabric.addShape(vm.shape);\r\n        };\r\n        vm.drawShape = function(event) {\r\n            var deltaX, deltaY;\r\n            if(!$scope.isDown || !$scope.drawingMode) return;\r\n            switch($scope.shapeType) {\r\n                case 'rect':\r\n                    if($scope.keepSquare) {\r\n                        deltaX = event.e.offsetX - $scope.startPosition.x;\r\n                        deltaY = deltaX;\r\n                    } else {\r\n                        deltaX = event.e.offsetX - $scope.startPosition.x;\r\n                        deltaY = event.e.offsetY - $scope.startPosition.y;\r\n                    }\r\n\r\n                    $scope.shape.setWidth(deltaX);\r\n                    $scope.shape.setHeight(deltaY);\r\n                    $scope.shape.setCoords();\r\n                    break;\r\n                case 'ellipse':\r\n                    var rx = Math.abs($scope.startPosition.x - event.e.offsetX) / 2;\r\n                    var ry = Math.abs($scope.startPosition.y - event.e.offsetY) / 2;\r\n                    if( rx > $scope.shape.strokeWidth) {\r\n                        rx -= $scope.shape.strokeWidth / 2;\r\n                    }                \r\n                    if( ry > $scope.shape.strokeWidth) {\r\n                        ry -= $scope.shape.strokeWidth / 2;\r\n                    }\r\n                    $scope.shape.set({rx: rx, ry: ry});\r\n\r\n                    if($scope.startPosition.x > event.e.offsetX) {\r\n                        $scope.shape.set({originX: 'right'});\r\n                    } else {\r\n                        $scope.shape.set({originX: 'left'});\r\n                    }\r\n                    if($scope.startPosition.y > event.e.offsetY) {\r\n                        $scope.shape.set({originY: 'bottom'});\r\n                    } else {\r\n                        $scope.shape.set({originY: 'top'});\r\n                    }\r\n                    $scope.shape.setCoords();\r\n                    break;\r\n                case 'triangle':\r\n                    deltaX = event.e.offsetX - $scope.startPosition.x;\r\n                    deltaY = event.e.offsetY - $scope.startPosition.y;\r\n                    $scope.shape.setWidth(deltaX);\r\n                    $scope.shape.setHeight(deltaY);\r\n                    $scope.shape.setCoords();\r\n                    break;\r\n                case 'polygon':\r\n                    var centerX = $scope.shape.getCenterPoint().x;\r\n                    console.log($scope.shape.getCenterPoint());\r\n                    var radius = (event.e.offsetX - $scope.startPosition.x) / 2;\r\n                    var points = starPolygonPoints($scope.shape.get('points').length / 2, radius, radius / 2);\r\n                    var boundingBox = $scope.shape.getBoundingBox();\r\n                    $scope.shape.set({points: points, width: boundingBox.width, height: boundingBox.height});\r\n                    $scope.shape.setCoords();\r\n    //                shape.set({left: boundingBox.topLeft, top})\r\n                    break;\r\n            }\r\n            $scope.fabric.renderAll();\r\n        };\r\n        vm.addDrawing = function(event) {\r\n            $scope.isDown = false;\r\n\r\n            if($scope.drawingMode) {\r\n                if($scope.shapeType === 'rect') {\r\n                    if(event.e.offsetY - $scope.startPosition.y < 0) {\r\n                        console.log('change spinner');\r\n                        $scope.shape.top = event.e.offsetY;\r\n                        $scope.shape.setHeight($scope.shape.getHeight() * -1);\r\n                        $scope.shape.setCoords();\r\n                    }\r\n                } else if($scope.shapeType === 'triangle') {\r\n                    if(event.e.offsetY - $scope.startPosition.y < 0) {\r\n                        $scope.shape.top = event.e.offsetY;\r\n                        $scope.shape.setHeight($scope.shape.getHeight() * -1);\r\n                        $scope.shape.rotate(180);\r\n                        $scope.shape.setCoords();\r\n                    }\r\n                }\r\n    //            MyApp.canvas.add(shape);\r\n                $scope.fabric.setActiveObject($scope.shape);\r\n    //            MyApp.canvas.off('mouse:move');\r\n\r\n            } \r\n        }\r\n//        $scope.$on('mouse:down', vm.draw(event));\r\n//        $scope.$on('mouse:move', vm.drawShape(event));\r\n//        $scope.$on('mouse:up', vm.addDrawing(event));\r\n        $scope.$on('canvas:created', vm.init);\r\n    }\r\n})();\n(function() {\r\n    angular\r\n        .module('app')\r\n        .controller('homeCtrl', homeCtrl);\r\n    \r\n    function homeCtrl() {\r\n        console.log('home controller is running');\r\n    }\r\n})();\n(function() {\r\n    angular\r\n        .module('app')\r\n        .controller('profileCtrl', profileCtrl);\r\n    profileCtrl.$inject = ['$location', 'meanData'];\r\n    function profileCtrl($location, meanData) {\r\n        var vm = this;\r\n\r\n        vm.user = {};\r\n        vm.designs = {};\r\n        meanData.getProfile()\r\n            .success(function(data) {\r\n                vm.user = data;\r\n                meanData.getDesigns()\r\n                    .success(function(data) {\r\n                        vm.designs = data;\r\n                })\r\n            })\r\n            .error( function(e) {\r\n                console.log(e);\r\n            });\r\n        \r\n    }   \r\n})();\n(function() {\r\n    angular\r\n        .module('app')\r\n        .controller('loginCtrl', loginCtrl);\r\n    \r\n    loginCtrl.$inject = ['$location', 'authentication'];\r\n    function loginCtrl($location, authentication) {\r\n        var vm = this;\r\n\r\n        vm.credentials = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        vm.onSubmit = function() {\r\n            authentication\r\n                .login(vm.credentials)\r\n                .error(function(err) {\r\n                    console.log(err);\r\n                })\r\n                .then(function() {\r\n                    $location.path('profile');\r\n                });\r\n        };\r\n    }\r\n})();\n(function() {\r\n    \r\n    angular\r\n        .module('app')\r\n        .controller('registerCtrl', registerCtrl);\r\n    registerCtrl.$inject = ['$location', 'authentication'];\r\n    function registerCtrl($location, authentication) {\r\n        var vm = this;\r\n\r\n        vm.credentials = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n\r\n        vm.onSubmit = function() {\r\n            console.log('submitting registration');\r\n            authentication\r\n                .register(vm.credentials)\r\n                .error(function(err) {\r\n                    console.log(err);\r\n                })\r\n                .then(function() {\r\n                    $location.path('profile');\r\n                });\r\n        };\r\n    }\r\n})();\n(function () {\r\n    angular\r\n        .module('app')\r\n        .service('authentication', authentication);\r\n    \r\n    authentication.$inject = ['$http', '$window'];\r\n    function authentication($http, $window) {\r\n        var saveToken = function(token) {\r\n            $window.localStorage['mean-token'] = token;\r\n        };\r\n        \r\n        var getToken = function() {\r\n            return $window.localStorage['mean-token'];\r\n        };\r\n        \r\n        logout = function() {\r\n            $window.localStorage.removeItem('mean-token');\r\n        };\r\n        \r\n        var isLoggedIn = function() {\r\n            var token = getToken();\r\n            var payload;\r\n            \r\n            if(token) {\r\n                payload = token.split('.')[1];\r\n                payload = $window.atob(payload);\r\n                payload = JSON.parse(payload);\r\n                \r\n                return payload.exp > Date.now() / 1000;\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n        var currentUser = function() {\r\n            if(isLoggedIn()) {\r\n                var token = getToken();\r\n                var payload = token.split('.')[1];\r\n                payload = $window.atob(payload);\r\n                payload = JSON.parse(payload);\r\n                return {\r\n                    email: payload.email,\r\n                    name: payload.name\r\n                };\r\n            }\r\n        };\r\n        register = function(user) {\r\n            return $http.post('/api/register', user).success(function(data) {\r\n                saveToken(data.token);\r\n            });\r\n        };\r\n        login = function(user) {\r\n            return $http.post('/api/login', user).success(function(data) {\r\n                saveToken(data.token);\r\n            });\r\n        };\r\n        return {\r\n            saveToken: saveToken,\r\n            getToken: getToken,\r\n            logout: logout,\r\n            isLoggedIn: isLoggedIn,\r\n            currentUser: currentUser,\r\n            register: register,\r\n            login: login,\r\n            logout: logout\r\n        };\r\n    }\r\n})();\n(function() {\r\n    angular\r\n        .module('app')\r\n        .service('meanData', meanData);\r\n    \r\n    meanData.$inject = ['$http', 'authentication'];\r\n    function meanData($http, authentication) {\r\n        var getProfile = function() {\r\n            console.log(authentication.getToken());\r\n            return $http.get('/api/profile', {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + authentication.getToken()\r\n                }\r\n            });\r\n        };\r\n        var getDesigns = function() {\r\n            return $http.get('/api/designs', {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + authentication.getToken()\r\n                }\r\n            });\r\n        };\r\n        return {\r\n            getProfile: getProfile,\r\n            getDesigns: getDesigns\r\n        };\r\n    }\r\n})();\n(function() {\r\n    angular\r\n        .module('app')\r\n        .controller('navigationCtrl', navigationCtrl);\r\n    navigationCtrl.$inject = ['$location', 'authentication'];\r\n    function navigationCtrl($location, authentication) {\r\n        var vm = this;\r\n\r\n        vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n        vm.currentUser = authentication.currentUser();\r\n    }\r\n})();\n(function () {\r\n    angular\r\n        .module('app')\r\n        .directive('navigation', navigation);\r\n    \r\n    function navigation() {\r\n        return {\r\n            restrict: 'EA',\r\n            templateUrl: '/common/directives/navigation/navigation.template.html',\r\n            controller: 'navigationCtrl as navvm'\r\n        };\r\n    }\r\n})();"]}